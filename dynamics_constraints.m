function [h,dH] = dynamics_constraints(z, params)
% DYNAMICS_CONSTRAINTS(z, params) compiles the dynamics constraints
% generated by dynamics_constraint_with_derivative.
% -------------------------------------------------------------------
% INPUTS:
%   z      - vector of decision variables containing the w_i and u_i.
%   params - a structure of problem parameters (masses, inertias, lengths,
%       etc.)
% OUTPUTS
%   h    - compiled h_i from dynamics_constraint_with_derivative
%   dH_i - compiled dH_i from dynamics_constraint_with_derivative
%
% MODIFIED from MEAM517 HW 5 solution code. Credit to Mat Halm

N = params.N; nw = params.nw; nu = params.nu;

h = zeros((N-1)*nw, 1);
dH = zeros((N-1)*nw, N*(nw + nu));

for i=1:(N-1)
   % get indices of x_i, u_i, x_ip1, and u_ip1 within z
   w_i_inds = (1:nw) + (nw + nu) * (i - 1);
   u_i_inds = (1:nu) + nw * i + nu * (i - 1);
   w_ip1_inds = w_i_inds + nw + nu;
   u_ip1_inds = u_i_inds + nw + nu;
   
   % Call dynamics_constraint_with_derivative
   [h_i, dH_i] = dynamics_constraint_with_derivative(z(w_i_inds), ...
       z(u_i_inds), z(w_ip1_inds), z(u_ip1_inds), params);
   
   % Fit h_i and dH_i into h and dH, respectively.
   h((1:nw) + nw * (i-1)) = h_i;
   dH((1:nw) + nw * (i-1), [w_i_inds u_i_inds w_ip1_inds u_ip1_inds]) = ...
       dH_i;
    
end

end